# Generated by Django 3.0.6 on 2021-02-09 07:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('course_numbering', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('field', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3000)])),
                ('group_code', models.CharField(blank=True, max_length=4, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('semester', models.CharField(blank=True, max_length=10, null=True)),
                ('major', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('num_periods', models.IntegerField(blank=True, null=True)),
                ('course_numbering', models.CharField(blank=True, max_length=100, null=True)),
                ('course_code', models.ForeignKey(blank=True, db_column='course_code', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Course', to_field='course_code')),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(max_length=5)),
                ('lecture', models.ForeignKey(blank=True, db_column='code', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Lecture', to_field='code')),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructor', models.CharField(max_length=100)),
                ('lecture', models.ForeignKey(blank=True, db_column='code', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Lecture', to_field='code')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('field', models.CharField(blank=True, max_length=100, null=True)),
                ('drive_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('drive_link', models.CharField(blank=True, max_length=1000, null=True)),
                ('drive_link_tag', models.CharField(blank=True, max_length=1000, null=True)),
                ('course_code', models.ForeignKey(blank=True, db_column='course_code', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Course', to_field='course_code')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, default='', max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('first_name', models.CharField(blank=True, default='', max_length=60)),
                ('last_name', models.CharField(blank=True, default='', max_length=60)),
                ('current_position', models.CharField(blank=True, default='', max_length=64)),
                ('about', models.CharField(blank=True, default='', max_length=255)),
                ('department', models.CharField(blank=True, default='', max_length=128)),
                ('company', models.CharField(blank=True, default='', max_length=128)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('icon_id', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
